ARG BASE_IMAGE="ubuntu:22.04"

FROM $BASE_IMAGE

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update
# RUN apt upgrade -y

# Install desktop version to simulate "real" installation
RUN apt-get install -y curl 
RUN apt-get install -y ubuntu-desktop

# Install nodejs for server serving port scanner application
RUN curl -sL https://deb.nodesource.com/setup_18.x -o nodesource_setup.sh
RUN bash nodesource_setup.sh 
RUN apt-get install -y nodejs

# Install java with chromedriver for automatically serving port scanner application
RUN apt install -y openjdk-19-jdk

# Install firefox 
# RUN add-apt-repository ppa:mozillateam/ppa
# RUN apt install firefox
# RUN mkdir -p /opt/firefox
# RUN curl -L https://github.com/mozilla/geckodriver/releases/download/v0.33.0/geckodriver-v0.33.0-linux64.tar.gz | tar xz -C /opt/firefox
# ENV FIREFOX_DRIVER_PATH /opt/firefox
# ENV PATH $FIREFOX_DRIVER_PATH:$PATH

ARG FIREFOX_VERSION=latest
RUN FIREFOX_DOWNLOAD_URL=$(if [ $FIREFOX_VERSION = "latest" ] || [ $FIREFOX_VERSION = "beta-latest" ] || [ $FIREFOX_VERSION = "nightly-latest" ] || [ $FIREFOX_VERSION = "devedition-latest" ] || [ $FIREFOX_VERSION = "esr-latest" ]; then echo "https://download.mozilla.org/?product=firefox-$FIREFOX_VERSION-ssl&os=linux64&lang=en-US"; else echo "https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2"; fi) \
  && apt-get update -qqy \
  && apt-get -qqy --no-install-recommends install firefox libavcodec-extra \
  && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \
  && wget --no-verbose -O /tmp/firefox.tar.bz2 $FIREFOX_DOWNLOAD_URL \
  && apt-get -y purge firefox \
  && rm -rf /opt/firefox \
  && tar -C /opt -xjf /tmp/firefox.tar.bz2 \
  && rm /tmp/firefox.tar.bz2 \
  && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \
  && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox

#============
# GeckoDriver
#============
ARG GECKODRIVER_VERSION=latest
RUN mkdir -p /opt/firefox
RUN GK_VERSION=$(if [ ${GECKODRIVER_VERSION:-latest} = "latest" ]; then echo "0.33.0"; else echo $GECKODRIVER_VERSION; fi) \
  && echo "Using GeckoDriver version: "$GK_VERSION \
  && wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GK_VERSION/geckodriver-v$GK_VERSION-linux64.tar.gz \
  && rm -rf /opt/geckodriver \
  && tar -C /opt -zxf /tmp/geckodriver.tar.gz \
  && rm /tmp/geckodriver.tar.gz \
  && mv /opt/geckodriver /opt/firefox

RUN apt-get update
RUN apt-get -qy --no-install-recommends install xvfb
ENV DISPLAY=:99

# RUN tar xjf firefox-115.0.2.tar.bz2
# RUN mv firefox /opt
# RUN ln -s /opt/firefox/firefox /usr/local/bin/firefox

# # Install Chromedriver
# ENV CHROMEDRIVER_VERSION 114.0.5735.90
# RUN wget -q --no-check-certificate -O /tmp/chromedriver.zip https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
# RUN unzip /tmp/chromedriver.zip -d /opt/
# RUN rm /tmp/chromedriver.zip
# ENV CHROME_DRIVER_PATH /opt/chromedriver
# ENV PATH $CHROME_DRIVER_PATH:$PATH

# Configure experiment to artificially open ports
COPY ./artificial-ports-server /app/artificial-ports-server
COPY ./node_modules /app/public/node_modules
COPY ./dist /app/public
COPY ./selenium-portscan/target/selenium-portscan-1.0.0-jar-with-dependencies.jar /app/selenium-portscan.jar

COPY /scripts/start_ubuntu_firefox.sh /app/start.sh

RUN chmod -R 777 /opt/firefox
RUN chmod -R 777 /home/
RUN chmod -R 777 /app/
RUN useradd -u 8877 user
RUN usermod -a -G root user
USER user

CMD ["/app/start.sh"]